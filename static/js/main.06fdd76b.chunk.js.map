{"version":3,"sources":["components/Header.js","components/ToDoForm.js","components/ToDoItem.js","components/ToDoList.js","helpers.js","modules/Storage.js","components/App.js","index.js"],"names":["Header","props","className","tagline","ToDoForm","textInput","React","createRef","handleSubmit","e","preventDefault","text","current","value","trim","console","log","addToDo","currentTarget","reset","onSubmit","this","type","placeholder","ref","area-hidden","Component","ToDoItem","handleKeyUp","keyCode","target","blur","todo","data","data-id","uuid","id","checked","done","onChange","toggleToDoDone","htmlFor","editToDoText","onKeyUp","onClick","removeToDo","ToDoList","Object","keys","items","map","key","getRandomTagline","Math","floor","random","length","canUseLocalStorage","localStorage","setItem","removeItem","Error","defaultValue","getItem","App","setState","state","toDoItems","checkbox","storageKey","old","Storage","get","JSON","parse","set","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06fdd76b.chunk.js","sourcesContent":["import React from \"react\";\n\n//CLASS COMPONENT VERSION\n// class Header extends React.Component {\n//   render() {\n//     return (\n//       <header className=\"header\">\n//         <h1>What to do?</h1>\n//         <span className=\"tagline\">\n//           This could be your {this.props.tagline} list\n//         </span>\n//       </header>\n//     );\n//   }\n// }\n\n//FUNCTIONAL COMPONENT VERSION\nconst Header = props => {\n  return (\n    <header className=\"header\">\n      <h1>What to do?</h1>\n      <span className=\"tagline\">This could be your {props.tagline} list</span>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nclass ToDoForm extends React.Component {\n  textInput = React.createRef();\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const text = this.textInput.current.value.trim();\n    console.log(text);\n    this.props.addToDo(text);\n    e.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form className=\"input-group my-3\" onSubmit={this.handleSubmit}>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"Add a new todo item...\"\n          ref={this.textInput}\n        />\n        <div className=\"input-group-append\">\n          <button className=\"btn btn-outline-secondary\" type=\"submit\">\n            <i className=\"fas fa-plus\" area-hidden=\"true\" />\n            Add Item\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default ToDoForm;\n","import React from \"react\";\n\nclass ToDoItem extends React.Component {\n  handleKeyUp = e => {\n    //Removes focus when ENTER is pressed\n    if (e.keyCode === 13) {\n      e.target.blur();\n    }\n  };\n  render() {\n    const todo = this.props.data;\n    return (\n      <tr className=\"todo-item\" data-id={todo.uuid}>\n        <td>\n          <div className=\"custom-control custom-checkbox\">\n            <input\n              className=\"custom-control-input\"\n              value={todo.uuid}\n              id={`todo-done-${todo.uuid}`}\n              type=\"checkbox\"\n              checked={todo.done}\n              onChange={this.props.toggleToDoDone}\n            />\n            <label\n              className=\"custom-control-label\"\n              htmlFor={`todo-done-${todo.uuid}`}\n            >\n              &nbsp;\n            </label>\n          </div>\n        </td>\n        <td className=\"col-1\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            value={todo.text}\n            onChange={e => {\n              this.props.editToDoText(todo.uuid, e.target.value);\n            }}\n            onKeyUp={e => {\n              this.handleKeyUp(e);\n            }}\n          />\n        </td>\n        <td className=\"col-action\">\n          <i\n            className=\"icon-remove far fa-trash-alt\"\n            onClick={e => this.props.removeToDo(todo.uuid)}\n          />\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default ToDoItem;\n","import React from \"react\";\nimport ToDoItem from \"./ToDoItem\";\n\nclass ToDoList extends React.Component {\n  render() {\n    return (\n      <div className=\"todo-list\">\n        <table className=\"todo-items\">\n          <tbody>\n            {Object.keys(this.props.items).map(uuid => (\n              <ToDoItem\n                key={`todo-item-${uuid}`}\n                data={this.props.items[uuid]}\n                editToDoText={this.props.editToDoText}\n                toggleToDoDone={this.props.toggleToDoDone}\n                removeToDo={this.props.removeToDo}\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default ToDoList;\n","function randomArrayItem(data) {\n  return data[Math.floor(Math.random() * data.length)];\n}\n\nexport function getRandomTagline() {\n  const taglines = [\"Christmas\", \"holiday\", \"shopping\"];\n  return randomArrayItem(taglines);\n}\n","class Storage {\n  constructor() {\n    if (!this.canUseLocalStorage()) {\n      throw Error(\"The local storage is full or disabled!\");\n    }\n  }\n\n  set(key, value) {\n    localStorage.setItem(key, value);\n  }\n\n  get(key, defaultValue = null) {\n    const value = localStorage.getItem(key);\n    if (value !== null) {\n      return value;\n    }\n    return defaultValue;\n  }\n\n  canUseLocalStorage = () => {\n    let test = \"test\";\n\n    try {\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  };\n}\n\nexport default new Storage();\n","import React from \"react\";\nimport Header from \"./Header\";\nimport ToDoForm from \"./ToDoForm\";\nimport ToDoList from \"./ToDoList\";\nimport uuid from \"uuid/v4\";\nimport { getRandomTagline } from \"../helpers\";\nimport Storage from \"../modules/Storage\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.storageKey = \"react-todo\";\n    const old = Storage.get(this.storageKey);\n\n    if (old) {\n      this.state = JSON.parse(old);\n    } else {\n      this.state = {\n        toDoItems: {}\n      };\n    }\n  }\n\n  componentDidUpdate() {\n    Storage.set(this.storageKey, JSON.stringify(this.state));\n  }\n\n  addToDo = text => {\n    const todo = {\n      uuid: uuid(),\n      text: text,\n      done: false\n    };\n\n    this.setState(state => {\n      state.toDoItems[todo.uuid] = todo;\n      return state;\n    });\n  };\n\n  editToDoText = (uuid, text) => {\n    this.setState(state => {\n      state.toDoItems[uuid].text = text;\n      return state;\n    });\n  };\n\n  toggleToDoDone = e => {\n    const checkbox = e.target;\n    this.setState(state => {\n      state.toDoItems[checkbox.value].done = checkbox.checked;\n      return state;\n    });\n  };\n\n  removeToDo = uuid => {\n    this.setState(state => {\n      delete state.toDoItems[uuid];\n      return state;\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header tagline={getRandomTagline()} />\n        <ToDoForm addToDo={this.addToDo} />\n        <ToDoList\n          items={this.state.toDoItems}\n          editToDoText={this.editToDoText}\n          toggleToDoDone={this.toggleToDoDone}\n          removeToDo={this.removeToDo}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"./sass/style.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}